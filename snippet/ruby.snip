snippet time
abbr    times ... end
    ${1}.times { |${2:i}|
        ${3:TARGET}
    }

snippet for
abbr    for ... end
    for ${1:i} in (${2:0}..${3:.n})
        ${4:TARGET}
    end

snippet down
abbr    downto ... end
    ${1}.downto(${2}) { |${3:i}|
        ${4:TARGET}
    }

snippet while
abbr    while ... end
    while ${1:true}
        ${2:TARGET}
    end

snippet each
abbr    each ... end
    ${1}.each { |${2:i}|
        ${3:TARGET}
    }

snippet arr
abbr    Array.new()
    = Array.new(${1})
    ${2}
snippet arra
abbr    Array.new()
    = Array.new(${1})
    ${2}
snippet =arr
abbr    Array.new()
    = Array.new(${1})
    ${2}
snippet =arra
abbr    Array.new()
    = Array.new(${1})
    ${2}
   
snippet arr2
abbr    Array.new()
    = Array.new(${1}).map{Array.new(${2})}
    ${3}
snippet arra2
abbr    Array.new()
    = Array.new(${1}).map{Array.new(${2})}
    ${3}
snippet =arr2
abbr    Array.new()
    = Array.new(${1}).map{Array.new(${2})}
    ${3}
snippet =arra2
abbr    Array.new()
    = Array.new(${1}).map{Array.new(${2})}
    ${3}

snippet geti
abbr    gets.to_i
    = gets.to_i
    ${1}
snippet =geti
abbr    gets.to_i
    = gets.to_i
    ${1}
snippet gets
abbr    gets.split.map(&:to_i)
    = gets.split.map(&:to_i)
    ${1}
snippet =gets
abbr    gets.split.map(&:to_i)
    = gets.split.map(&:to_i)
    ${1}
snippet getsp
abbr    gets.split.map{ |x| x.to_i.pred }
    = gets.split.map{ |x| x.to_i.pred }
    ${1}
snippet =getsp
abbr    gets.split.map{ |x| x.to_i.pred }
    = gets.split.map{ |x| x.to_i.pred }
    ${1}
snippet getc
abbr    gets.chomp
    = gets.chomp
    ${1}
snippet =getc
abbr    gets.chomp
    = gets.chomp
    ${1}

snippet ttao
abbr    times.map { gets.to_i }
    ${1} = ${2}.times.map { gets.to_i }
    ${3}
snippet ttat
abbr    a[i], b[i] = gets.split.map(&:to_i)
    ${1}, ${2} = ${3:n}.times.map { gets.split.map(&:to_i) }.transpose
    ${4}

snippet injp
abbr    inject :+
options word
    inject :+
    ${1}
snippet inje
abbr    inject{}
options word
    inject{|${1:sum}, ${2:i}| ${3}}
    ${4}
